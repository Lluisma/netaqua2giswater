

CREATE OR REPLACE VIEW AMSA_REV_T_CONNEC AS

  SELECT ID_CLAVEGUERO CONNEC_ID, ID_CLAVEGUERO CODE, 1 EXPL_ID, DATA_REV, DATA_MODIFICACIO
  FROM   NS_MATARO.CL_V_CLAVEGUERO
  WHERE  DATA_REV IS NOT NULL OR DATA_MODIFICACIO IS NOT NULL;



CREATE OR REPLACE VIEW AMSA_REV_T_GULLY AS

  SELECT ID_EMBORNAL GULLY_ID, ID_EMBORNAL CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_EMBORNAL
  WHERE  DATA_REV IS NOT NULL
  UNION
  SELECT ID_REIXA GULLY_ID, ID_REIXA CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_REIXA
  WHERE  DATA_REV IS NOT NULL;



CREATE OR REPLACE VIEW AMSA_REV_T_CONDUIT AS

  SELECT ID_TRAM ARC_ID, ID_TRAM CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_TRAM
  WHERE  DATA_REV IS NOT NULL;



CREATE OR REPLACE VIEW AMSA_REV_T_NODE_JUNCTION AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_NODE
  WHERE  DATA_REV IS NOT NULL
    AND  ESTAT IN ('A','B','X')
    AND  NODE_FUN IN ('N', 'NC', 'NF', 'NR');

CREATE OR REPLACE VIEW AMSA_REV_T_NODE_MANHOLE AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV, POU_CON, TAPA_EST,
         CASE
           WHEN TAPA_CAN = 0 THEN 'false'
           WHEN TAPA_CAN = 1 THEN 'true'
           ELSE 'false'
         END TAPA_CAN
  FROM   NS_MATARO.CL_V_NODE
  WHERE  (DATA_REV IS NOT NULL OR POU_CON IS NOT NULL OR TAPA_EST IS NOT NULL OR TAPA_CAN > 0)
    AND  ESTAT IN ('A','B','X')
    AND  NODE_FUN IN ('P', 'PP');

CREATE OR REPLACE VIEW AMSA_REV_T_NODE_NETINIT AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV, TAPA_EST,
         CASE
           WHEN TAPA_CAN = 0 THEN 'false'
           WHEN TAPA_CAN = 1 THEN 'true'
           ELSE 'false'
         END TAPA_CAN 
  FROM   NS_MATARO.CL_V_NODE
  WHERE  (DATA_REV IS NOT NULL OR TAPA_EST IS NOT NULL OR TAPA_CAN > 0)
    AND  ESTAT IN ('A','B','X') 
    AND  NODE_FUN IN ('I', 'IC', 'SR', 'SU');

CREATE OR REPLACE VIEW AMSA_REV_T_NODE_OUTFALL AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_NODE
  WHERE  DATA_REV IS NOT NULL
    AND  ESTAT IN ('A','B','X') 
    AND  NODE_FUN IN ('D', 'DE');

CREATE OR REPLACE VIEW AMSA_REV_T_NODE_VALVE AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV 
  FROM   NS_MATARO.CL_V_NODE
  WHERE  DATA_REV IS NOT NULL
    AND  ESTAT IN ('A','B','X') 
    AND  NODE_FUN IN ('V', 'VE', 'VR');

CREATE OR REPLACE VIEW AMSA_REV_T_NODE_CHAMBER AS

  SELECT ID_NODE NODE_ID, ID_NODE CODE, 1 EXPL_ID, DATA_REV, POU_CON, TAPA_EST, 
         CASE
           WHEN TAPA_CAN = 0 THEN 'false'
           WHEN TAPA_CAN = 1 THEN 'true'
           ELSE 'false'
         END TAPA_CAN
  FROM   NS_MATARO.CL_V_NODE
  WHERE  (DATA_REV IS NOT NULL OR POU_CON IS NOT NULL OR TAPA_EST IS NOT NULL OR TAPA_CAN > 0)
    AND  ESTAT IN ('A','B','X') 
    AND  NODE_FUN IN ('B', 'C', 'S');



